---

schema_version: 1

rules:
  - description: Test match query begins_with
    domains:
      - test-query
    matches:
      all:
        - paths:
            exact:
              - '/query/begins_with'
        - query:
            begins_with:
              - 'param=value'
    actions:
      synthetic_response: 'match_query_begins_with'

tests:
  - name: Test match query begins_with exact
    request:
      url: 'https://test-query/query/begins_with?param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_begins_with'

  - name: Test match query begins_with
    request:
      url: 'https://test-query/query/begins_with?param=value&param2=othervalue'
    expect:
      status: 200
      body:
        - regex: 'match_query_begins_with'

  - name: Test match query begins_with wrong
    request:
      url: 'https://test-query/query/begins_with?does_not=begin_with&param=value'
    expect:  # no configured backend
      status: 500

---

schema_version: 1

rules:
  - description: Test match query ends_with
    domains:
      - test-query
    matches:
      all:
        - paths:
            exact:
              - '/query/ends_with'
        - query:
            ends_with:
              - 'param=value'
    actions:
      synthetic_response: 'match_query_ends_with'

tests:
  - name: Test match query ends_with exact
    request:
      url: 'https://test-query/query/ends_with?param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_ends_with'

  - name: Test match query ends_with
    request:
      url: 'https://test-query/query/ends_with?the=famous&param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_ends_with'

  - name: Test match query ends_with wrong
    request:
      url: 'https://test-query/query/ends_with?param=value&is_not=the_end'
    expect:  # no configured backend
      status: 500

---

schema_version: 1

rules:
  - description: Test match query contains
    domains:
      - test-query
    matches:
      all:
        - paths:
            exact:
              - '/query/contains'
        - query:
            contains:
              - 'param=value'
    actions:
      synthetic_response: 'match_query_contains'

tests:
  - name: Test match query contains exact
    request:
      url: 'https://test-query/query/contains?param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_contains'

  - name: Test match query contains
    request:
      url: 'https://test-query/query/contains?the=famous&param=value&in_the=middle'
    expect:
      status: 200
      body:
        - regex: 'match_query_contains'

  - name: Test match query contains in beginning
    request:
      url: 'https://test-query/query/contains?param=value&in_the=beginning'
    expect:
      status: 200
      body:
        - regex: 'match_query_contains'

  - name: Test match query contains in end
    request:
      url: 'https://test-query/query/contains?it_in=the_end_as&param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_contains'

  - name: Test match query contains wrong
    request:
      url: 'https://test-query/query/contains?almost=param&value=but_not_quite'
    expect:  # no configured backend
      status: 500

---

schema_version: 1

rules:
  - description: Test match query exact
    domains:
      - test-query
    matches:
      all:
        - paths:
            exact:
              - '/query/exact'
        - query:
            exact:
              - 'param=value'
    actions:
      synthetic_response: 'match_query_exact'

tests:
  - name: Test match query exact
    request:
      url: 'https://test-query/query/exact?param=value'
    expect:
      status: 200
      body:
        - regex: 'match_query_exact'

  - name: Test match query exact wrong
    request:
      url: 'https://test-query/query/exact?param=value&not=exactly_right'
    expect:  # no configured backend
      status: 500

---

schema_version: 1

rules:
  - description: Test match query regex
    domains:
      - test-query
    matches:
      all:
        - paths:
            exact:
              - '/query/regex'
        - query:
            regex:
              - 'param=m[uU]st_have_(yeah|ooo)!{3,4}'
    actions:
      synthetic_response: 'match_query_regex'

tests:
  - name: Test match query regex
    request:
      url: 'https://test-query/query/regex?param=mUst_have_ooo!!!'
    expect:
      status: 200
      body:
        - regex: 'match_query_regex'

  - name: Test match query regex wrong
    request:
      url: 'https://test-query/query/regex?param=does&not_have_enough=yeah'
    expect:  # no configured backend
      status: 500
